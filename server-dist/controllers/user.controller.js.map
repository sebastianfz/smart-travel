{"version":3,"sources":["../../server/controllers/user.controller.js"],"names":["userController","getUsers","req","res","find","err","users","send","json","getUser","findOne","email","params","user","addUser","tempUser","body","save","updateUser","id","data","update","$set"],"mappings":";;;;;;AACA;;;;;;AAAmC;;;AAGnC,IAAIA,iBAAiB;;AAEjBC,cAAU,kBAACC,GAAD,EAAMC,GAAN,EAAc;AACpB,uBAAKC,IAAL,CAAU,EAAV,EAAc,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC1B,gBAAID,GAAJ,EAAS;AACL;AACA,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACD;AACAF,gBAAIK,IAAJ,CAASF,KAAT;AACH,SAPD;AAQH,KAXgB;;AAajBG,aAAS,iBAACP,GAAD,EAAMC,GAAN,EAAc;AACnB,uBAAKO,OAAL,CAAa,EAAEC,OAAOT,IAAIU,MAAJ,CAAWD,KAApB,EAAb,EAA0C,UAACN,GAAD,EAAMQ,IAAN,EAAe;AACrD,gBAAIR,GAAJ,EAAS;AACL;AACA,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACD;AACAF,gBAAIK,IAAJ,CAASK,IAAT;AACH,SAPD;AAQH,KAtBgB;;AAwBjBC,aAAS,iBAACZ,GAAD,EAAMC,GAAN,EAAc;AACnB,YAAIY,WAAW,mBAASb,IAAIc,IAAb,CAAf;AACA,uBAAKN,OAAL,CAAa,EAAEC,OAAOT,IAAIU,MAAJ,CAAWD,KAApB,EAAb,EAA0C,UAACN,GAAD,EAAMQ,IAAN,EAAe;AACrD,gBAAIR,GAAJ,EAAS;AACL;AACA,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACD,gBAAI,CAACQ,IAAL,EAAW;AACPE,yBAASE,IAAT,CAAc,UAACZ,GAAD,EAAMQ,IAAN,EAAe;AACzB,wBAAIR,GAAJ,EAAS;AACL,+BAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,wBAAIK,IAAJ,CAASK,IAAT;AACH,iBALD;AAMH,aAPD,MAOO;AACH;AACAV,oBAAIK,IAAJ,CAASK,IAAT;AACH;AACJ,SAhBD;AAkBH,KA5CgB;;AA8CjBK,gBAAY,oBAAChB,GAAD,EAAMC,GAAN,EAAc;AACtB,YAAIgB,KAAKjB,IAAIU,MAAJ,CAAWD,KAApB;AACA,YAAIS,OAAOlB,IAAIc,IAAf;AACA,uBAAKK,MAAL,CAAY;AACRV,mBAAOA;AADC,SAAZ,EAEG,EAAEW,MAAMF,IAAR,EAFH,EAEmB,UAACf,GAAD,EAAMQ,IAAN,EAAe;AAC9B,gBAAIR,GAAJ,EAAS;AACL,uBAAOF,IAAII,IAAJ,CAASF,GAAT,CAAP;AACH;AACDF,gBAAIK,IAAJ,CAASK,IAAT;AACH,SAPD;AAQH;;AAzDgB,CAArB,C,CAJA;kBAiEeb,c","file":"user.controller.js","sourcesContent":["// src/controllers/main.js\r\nimport User from '../models/user'; // Import the Todo model so we can query the DB\r\n\r\n\r\nlet userController = {\r\n\r\n    getUsers: (req, res) => {\r\n        User.find({}, (err, users) => {\r\n            if (err) {\r\n                // Send the error to the client if there is one\r\n                return res.send(err);\r\n            }\r\n            // Send todos in JSON format\r\n            res.json(users);\r\n        });\r\n    },\r\n\r\n    getUser: (req, res) => {\r\n        User.findOne({ email: req.params.email }, (err, user) => {\r\n            if (err) {\r\n                // Send the error to the client if there is one\r\n                return res.send(err);\r\n            }\r\n            // Send todos in JSON format\r\n            res.json(user);\r\n        });\r\n    },\r\n\r\n    addUser: (req, res) => {\r\n        let tempUser = new User(req.body);\r\n        User.findOne({ email: req.params.email }, (err, user) => {\r\n            if (err) {\r\n                // Send the error to the client if there is one\r\n                return res.send(err);\r\n            }\r\n            if (!user) {\r\n                tempUser.save((err, user) => {\r\n                    if (err) {\r\n                        return res.send(err);\r\n                    }\r\n                    res.json(user);\r\n                });\r\n            } else {\r\n                // Send todos in JSON format\r\n                res.json(user);\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    updateUser: (req, res) => {\r\n        let id = req.params.email;\r\n        let data = req.body;\r\n        User.update({\r\n            email: email\r\n        }, { $set: data }, (err, user) => {\r\n            if (err) {\r\n                return res.send(err);\r\n            }\r\n            res.json(user);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default userController;"]}