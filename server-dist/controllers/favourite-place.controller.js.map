{"version":3,"sources":["../../server/controllers/favourite-place.controller.js"],"names":["favouritePlaceController","getFavouritePlaces","req","res","find","isActive","err","result","send","json","getFavouritePlace","email","params","favouritePlace","addFavouritePlace","body","save","updateFavouritePlace","id","data","update","_id","$set","deleteFavouritePlace","findOne"],"mappings":";;;;;;AACA;;;;AACA;;;;;;AAFA;AAKA,IAAIA,2BAA2B;;AAE3BC,wBAAoB,4BAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,iCAAeC,IAAf,CAAoB,EAAEC,UAAU,IAAZ,EAApB,EAAwC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACrD,gBAAID,GAAJ,EAAS;AACL;AACA,uBAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACH;AACD;AACAH,gBAAIM,IAAJ,CAASF,MAAT;AACH,SAPD;AAQH,KAX0B;;AAa3BG,uBAAmB,2BAACR,GAAD,EAAMC,GAAN,EAAc;AAC7B,iCAAeC,IAAf,CAAoB,EAAEO,OAAOT,IAAIU,MAAJ,CAAWD,KAApB,EAA2BN,UAAU,IAArC,EAApB,EAAiE,UAACC,GAAD,EAAMO,cAAN,EAAyB;AACtF,gBAAIP,GAAJ,EAAS;AACL;AACA,uBAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACH;AACD;AACAH,gBAAIM,IAAJ,CAASI,kBAAkB,EAA3B;AACH,SAPD;AAQH,KAtB0B;;AAwB3BC,uBAAmB,2BAACZ,GAAD,EAAMC,GAAN,EAAc;AAC7B,YAAIU,iBAAiB,6BAAmBX,IAAIa,IAAvB,CAArB;AACAF,uBAAeG,IAAf,CAAoB,UAACV,GAAD,EAAMO,cAAN,EAAyB;AACzC,gBAAIP,GAAJ,EAAS;AACL,uBAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACH;AACDH,gBAAIM,IAAJ,CAASI,cAAT;AACH,SALD;AAMH,KAhC0B;;AAkC3BI,0BAAsB,8BAACf,GAAD,EAAMC,GAAN,EAAc;AAChC,YAAIe,KAAKhB,IAAIU,MAAJ,CAAWM,EAApB;AACA,YAAIC,OAAOjB,IAAIa,IAAf;AACA,iCAAeK,MAAf,CAAsB;AAClBC,iBAAKH;AADa,SAAtB,EAEG,EAAEI,MAAMH,IAAR,EAFH,EAEmB,UAACb,GAAD,EAAMO,cAAN,EAAyB;AACxC,gBAAIP,GAAJ,EAAS;AACL,uBAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACH;AACDH,gBAAIM,IAAJ,CAASI,cAAT;AACH,SAPD;AAQH,KA7C0B;;AA+C3BU,0BAAsB,8BAACrB,GAAD,EAAMC,GAAN,EAAc;AAChC,iCAAeqB,OAAf,CAAuB,EAAEH,KAAKnB,IAAIU,MAAJ,CAAWM,EAAlB,EAAvB,EAA+C,UAACZ,GAAD,EAAMO,cAAN,EAAyB;AACpE,gBAAIP,GAAJ,EAAS;AACL,uBAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACH;AACDO,2BAAeR,QAAf,GAA0B,KAA1B;AACA,qCAAee,MAAf,CAAsB;AAClBC,qBAAKnB,IAAIU,MAAJ,CAAWM;AADE,aAAtB,EAEG,EAAEI,MAAMT,cAAR,EAFH,EAE6B,UAACP,GAAD,EAAMO,cAAN,EAAyB;AAClD,oBAAIP,GAAJ,EAAS;AACL,2BAAOH,IAAIK,IAAJ,CAASF,GAAT,CAAP;AACH;AACDH,oBAAIM,IAAJ,CAASI,cAAT;AACH,aAPD;AAQH,SAbD;AAcH;AA9D0B,CAA/B,C,CAJwD;kBAqEzCb,wB","file":"favourite-place.controller.js","sourcesContent":["// src/controllers/main.js\r\nimport FavouritePlace from '../models/favourite-place'; // Import the Todo model so we can query the DB\r\nimport config from '../config/config';\r\n\r\n\r\nlet favouritePlaceController = {\r\n\r\n    getFavouritePlaces: (req, res) => {\r\n        FavouritePlace.find({ isActive: true }, (err, result) => {\r\n            if (err) {\r\n                // Send the error to the client if there is one\r\n                return res.send(err);\r\n            }\r\n            // Send todos in JSON format\r\n            res.json(result);\r\n        });\r\n    },\r\n\r\n    getFavouritePlace: (req, res) => {\r\n        FavouritePlace.find({ email: req.params.email, isActive: true }, (err, favouritePlace) => {\r\n            if (err) {\r\n                // Send the error to the client if there is one\r\n                return res.send(err);\r\n            }\r\n            // Send todos in JSON format\r\n            res.json(favouritePlace || []);\r\n        });\r\n    },\r\n\r\n    addFavouritePlace: (req, res) => {\r\n        let favouritePlace = new FavouritePlace(req.body);\r\n        favouritePlace.save((err, favouritePlace) => {\r\n            if (err) {\r\n                return res.send(err);\r\n            }\r\n            res.json(favouritePlace);\r\n        });\r\n    },\r\n\r\n    updateFavouritePlace: (req, res) => {\r\n        let id = req.params.id;\r\n        let data = req.body;\r\n        FavouritePlace.update({\r\n            _id: id\r\n        }, { $set: data }, (err, favouritePlace) => {\r\n            if (err) {\r\n                return res.send(err);\r\n            }\r\n            res.json(favouritePlace);\r\n        });\r\n    },\r\n\r\n    deleteFavouritePlace: (req, res) => {\r\n        FavouritePlace.findOne({ _id: req.params.id }, (err, favouritePlace) => {\r\n            if (err) {\r\n                return res.send(err);\r\n            }\r\n            favouritePlace.isActive = false;\r\n            FavouritePlace.update({\r\n                _id: req.params.id\r\n            }, { $set: favouritePlace }, (err, favouritePlace) => {\r\n                if (err) {\r\n                    return res.send(err);\r\n                }\r\n                res.json(favouritePlace);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default favouritePlaceController;"]}