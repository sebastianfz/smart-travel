{"version":3,"sources":["../server/index.js"],"names":["connect","db","connection","on","console","log","process","exit","app","server","createServer","use","json","limit","bodyLimit","static","join","__dirname","get","req","res","sendfile","resolve","listen","env","PORT","port","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA;;;;AAIA,mBAASA,OAAT,CAAiB,iBAAOC,EAAxB,E,CAA6B;AAC7B,mBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,YAAY;AACxCC,YAAQC,GAAR,CAAY,qEAAZ;AACAC,YAAQC,IAAR,CAAa,CAAb;AACH,CAHD;;AAKA,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,qBAAR;;AAEAH,IAAIG,GAAJ,CAAQ,qBAAWC,IAAX,CAAgB;AACpBC,WAAO,iBAAOC;AADM,CAAhB,CAAR;;AAIAN,IAAIG,GAAJ,CAAQ,kBAAQI,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,MAArB,CAAf,CAAR;;AAGA;AACAT,IAAIG,GAAJ,CAAQ,MAAR,EAAgB,uBAAhB;;AAGAH,IAAIU,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxBA,QAAIC,QAAJ,CAAa,eAAKC,OAAL,CAAa,eAAKN,IAAL,CAAUC,SAAV,EAAqB,MAArB,IAA+B,aAA5C,CAAb;AACH,CAFD;;AAKAT,IAAIC,MAAJ,CAAWc,MAAX,CAAkBjB,QAAQkB,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAA7C,EAAmD,YAAM;AACrDtB,YAAQC,GAAR,sBAA+BG,IAAIC,MAAJ,CAAWkB,OAAX,GAAqBD,IAApD;AACH,CAFD;;kBAKelB,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport routes from './routes';\r\nimport config from './config/config';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\n/**\r\n * Configure database\r\n */\r\n\r\nmongoose.connect(config.db); // Connects to your MongoDB.  Make sure mongod is running!\r\nmongoose.connection.on('error', function () {\r\n    console.log('MongoDB Connection Error. Please make sure that MongoDB is running.');\r\n    process.exit(1);\r\n});\r\n\r\nlet app = express();\r\napp.server = http.createServer(app);\r\n\r\n// logger\r\napp.use(morgan('dev'));\r\n\r\n// 3rd party middleware\r\napp.use(cors());\r\n\r\napp.use(bodyParser.json({\r\n    limit: config.bodyLimit\r\n}));\r\n\r\napp.use(express.static(path.join(__dirname, 'dist')));\r\n\r\n\r\n// api router\r\napp.use('/api', routes());\r\n\r\n\r\napp.get('/*', (req, res) => {\r\n    res.sendfile(path.resolve(path.join(__dirname, 'dist') + '/index.html'));\r\n});\r\n\r\n\r\napp.server.listen(process.env.PORT || config.port, () => {\r\n    console.log(`Started on port ${app.server.address().port}`);\r\n});\r\n\r\n\r\nexport default app;\r\n\r\n"]}