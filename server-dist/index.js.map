{"version":3,"sources":["../server/index.js"],"names":["app","server","createServer","use","exposedHeaders","corsHeaders","json","limit","bodyLimit","static","join","__dirname","config","db","get","req","res","sendfile","resolve","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB,iBAAOC;AADd,CAAL,CAAR;;AAIAL,IAAIG,GAAJ,CAAQ,qBAAWG,IAAX,CAAgB;AACpBC,WAAO,iBAAOC;AADM,CAAhB,CAAR;;AAIAR,IAAIG,GAAJ,CAAQ,kBAAQM,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,MAArB,CAAf,CAAR;;AAEA;AACA,kBAAa,cAAM;;AAEf;AACAX,QAAIG,GAAJ,CAAQ,0BAAW,EAAES,wBAAF,EAAUC,MAAV,EAAX,CAAR;;AAEA;AACAb,QAAIG,GAAJ,CAAQ,MAAR,EAAgB,sBAAO,EAAES,wBAAF,EAAUC,MAAV,EAAP,CAAhB;;AAGAb,QAAIc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,YAAIC,QAAJ,CAAa,eAAKC,OAAL,CAAa,OAAO,iBAApB,CAAb;AACH,KAFD;;AAIAlB,QAAIC,MAAJ,CAAWkB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAA7C,EAAmD,YAAM;AACrDC,gBAAQC,GAAR,sBAA+BzB,IAAIC,MAAJ,CAAWyB,OAAX,GAAqBH,IAApD;AACH,KAFD;AAGH,CAhBD;;kBAkBevB,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport initializeDb from './db';\r\nimport middleware from './middleware';\r\nimport routes from './routes';\r\nimport config from './config/config.json';\r\nimport path from 'path';\r\n\r\nlet app = express();\r\napp.server = http.createServer(app);\r\n\r\n// logger\r\napp.use(morgan('dev'));\r\n\r\n// 3rd party middleware\r\napp.use(cors({\r\n    exposedHeaders: config.corsHeaders\r\n}));\r\n\r\napp.use(bodyParser.json({\r\n    limit: config.bodyLimit\r\n}));\r\n\r\napp.use(express.static(path.join(__dirname, 'dist')));\r\n\r\n// connect to db\r\ninitializeDb(db => {\r\n\r\n    // internal middleware\r\n    app.use(middleware({ config, db }));\r\n\r\n    // api router\r\n    app.use('/api', routes({ config, db }));\r\n\r\n\r\n    app.get('/', (req, res) => {\r\n        res.sendfile(path.resolve(\"./\" + 'dist/index.html'));\r\n    });\r\n\r\n    app.server.listen(process.env.PORT || config.port, () => {\r\n        console.log(`Started on port ${app.server.address().port}`);\r\n    });\r\n});\r\n\r\nexport default app;\r\n"]}